service: reto-backend-starwars

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 128
  timeout: 10
  environment:
    DYNAMO_TABLE: ${self:service}-${opt:stage, 'dev'}-fusionadosTable
    WEATHER_API_KEY: edcfd734b6ec4a8de3bb64b5d9d53de6
    JWT_SECRET: reto_backend_starwars_rimac_1234567890
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE}

package:
  patterns:
    - "node_modules/swagger-ui-dist/**"
    - "openapi.json"

functions:
  docs:
    handler: src/handlers/docs.handler
    events:
      - http:
          path: docs
          method: get
      - http:
          path: docs/{proxy+}
          method: get
      - http:
          path: /{asset+}
          method: get
      - http:
          path: favicon.ico
          method: get

  fusionados:
    handler: src/handlers/fusionados.handler
    events:
      - http:
          path: fusionados
          method: get
          cors: true

  almacenar:
    handler: src/handlers/almacenar.handler
    events:
      - http:
          path: almacenar
          method: post
          cors: true

  historial:
    handler: src/handlers/historial.handler
    events:
      - http:
          path: historial
          method: get
          cors: true

resources:
  Resources:
    FusionadosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMO_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-openapi-documenter

custom:
  documentation:
    version: "1.0.0"
    title: "Star Wars Weather API - Reto Rimac"
    description: API que fusiona datos de SWAPI con OpenWeather y permite almacenamiento personalizado. Desarollado por Gianpiero Benvenuto.
    models:
      - name: Fusionado
        contentType: application/json
        schema:
          type: object
          properties:
            planetName:
              type: string
            climate:
              type: string
            population:
              type: string
            weather:
              type: object
              properties:
                temperatureC:
                  type: number
                description:
                  type: string
            timestamp:
              type: integer

      - name: AlmacenarRequest
        contentType: application/json
        schema:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: Identificador único del item (obligatorio)
            name:
              type: string
              description: Nombre del item (opcional)
            description:
              type: string
              description: Descripción del item (opcional)

      - name: AlmacenarResponse
        contentType: application/json
        schema:
          type: object
          properties:
            message:
              type: string
              example: Item almacenado exitosamente
            item:
              $ref: "#/components/schemas/AlmacenarRequest"

      - name: ErrorResponse
        contentType: application/json
        schema:
          type: object
          properties:
            error:
              type: string
              example: Error en los datos enviados

    paths:
      - path: /fusionados
        method: get
        description: Devuelve datos combinados de Star Wars y clima actual.
        tags:
          - Datos Fusionados
        request:
          parameters:
            querystrings:
              planet:
                required: true
                type: string
        responses:
          200:
            bodyType: Fusionado
          400:
            bodyType: ErrorResponse
          500:
            bodyType: ErrorResponse

      - path: /almacenar
        method: post
        description: Permite almacenar un ítem personalizado en la base de datos.
        tags:
          - Almacenamiento
        request:
          schemas:
            application/json: AlmacenarRequest
        responses:
          201:
            bodyType: AlmacenarResponse
          400:
            bodyType: ErrorResponse
          401:
            bodyType: ErrorResponse
          500:
            bodyType: ErrorResponse

      - path: /historial
        method: get
        description: Devuelve el historial de respuestas fusionadas almacenadas.
        tags:
          - Almacenamiento
        request:
          parameters:
            querystrings:
              limit:
                required: false
                type: number
              lastKey:
                required: false
                type: string
        responses:
          200:
            bodyType: Fusionado
          400:
            bodyType: ErrorResponse
          401:
            bodyType: ErrorResponse
          500:
            bodyType: ErrorResponse
