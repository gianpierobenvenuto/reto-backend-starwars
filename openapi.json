{
  "openapi": "3.0.0",
  "info": {
    "title": "Star Wars Weather API – Desarrollado por Gianpiero Benvenuto",
    "version": "1.0.0",
    "description": "API que combina datos de SWAPI y OpenWeather y permite almacenar planetas personalizados en DynamoDB."
  },
  "servers": [
    { "url": "https://pi6undhnwe.execute-api.us-east-1.amazonaws.com/dev/" }
  ],

  "tags": [
    {
      "name": "Planetas",
      "description": "Operaciones relacionadas con planetas, clima y almacenamiento."
    },
    {
      "name": "Historial",
      "description": "Consulta de registros almacenados por el endpoint /fusionados."
    }
  ],

  "security": [{ "BearerAuth": [] }],

  "paths": {
    "/almacenar": {
      "post": {
        "tags": ["Planetas"],
        "security": [{ "BearerAuth": [] }],
        "summary": "Almacena un planeta personalizado. El clima se calcula automáticamente.",
        "description": "Guarda un planeta personalizado en DynamoDB y le añade automáticamente la información climática calculada a partir de sus coordenadas. Los planetas personalizados no tienen expiración de cache.",
        "requestBody": {
          "description": "Envía los campos obligatorios \"id\", \"planetName\", \"climate\" y opcionalmente \"population\".",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlmacenarRequest" },
              "example": {
                "id": "tatooine-123",
                "planetName": "Tatooine",
                "climate": "arid",
                "population": "200000"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Planeta almacenado correctamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AlmacenarResponse" }
              }
            }
          },
          "400": {
            "description": "Petición incorrecta",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "No autorizado — header Authorization faltante o inválido",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          }
        }
      }
    },

    "/fusionados": {
      "get": {
        "tags": ["Planetas"],
        "security": [{ "BearerAuth": [] }],
        "summary": "Obtiene datos fusionados de un planeta (SWAPI/cache + clima).",
        "description": "Busca el planeta en cache o SWAPI y completa los datos con información climática basada en coordenadas.",
        "parameters": [
          {
            "in": "query",
            "name": "planeta",
            "required": true,
            "schema": { "type": "string", "minLength": 1 },
            "description": "Nombre del planeta a consultar (no sensible a mayúsculas)."
          }
        ],
        "responses": {
          "200": {
            "description": "Datos fusionados obtenidos correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["source", "data"],
                  "properties": {
                    "source": {
                      "type": "string",
                      "enum": ["cache", "live"],
                      "description": "Origen de los datos"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "planetName",
                        "climate",
                        "population",
                        "weather",
                        "timestamp"
                      ],
                      "properties": {
                        "planetName": { "type": "string" },
                        "climate": { "type": "string" },
                        "population": { "type": "string" },
                        "weather": { "$ref": "#/components/schemas/Weather" },
                        "timestamp": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Marca de tiempo UNIX"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parámetro inválido",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "No autorizado — header Authorization faltante o inválido",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Planeta no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },

    "/historial": {
      "get": {
        "tags": ["Historial"],
        "security": [{ "BearerAuth": [] }],
        "summary": "Retorna el historial de respuestas del endpoint /fusionados.",
        "description": "Devuelve los registros almacenados en DynamoDB ordenados de forma cronológica inversa. Incluye paginación mediante parámetros *limit* y *lastKey*.",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer", "minimum": 1 },
            "description": "Número máximo de elementos por página (valor por defecto 10)."
          },
          {
            "in": "query",
            "name": "lastKey",
            "schema": { "type": "string" },
            "description": "Cursor (clave codificada) para obtener la siguiente página."
          }
        ],
        "responses": {
          "200": {
            "description": "Historial obtenido correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["items", "lastKey"],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "planetName",
                          "climate",
                          "population",
                          "weather",
                          "timestamp"
                        ],
                        "properties": {
                          "planetName": { "type": "string" },
                          "climate": { "type": "string" },
                          "population": { "type": "string" },
                          "weather": { "$ref": "#/components/schemas/Weather" },
                          "timestamp": { "type": "integer", "format": "int64" }
                        }
                      }
                    },
                    "lastKey": {
                      "type": ["string", "null"],
                      "description": "Cursor codificado para la siguiente página o null si no hay más datos."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parámetros de paginación inválidos",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "No autorizado — header Authorization faltante o inválido",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT en formato `Bearer {token}`"
      }
    },

    "schemas": {
      "Weather": {
        "type": "object",
        "required": ["temperatureC", "description"],
        "properties": {
          "temperatureC": {
            "type": "number",
            "description": "Temperatura en °C"
          },
          "description": {
            "type": "string",
            "description": "Descripción breve del clima"
          }
        }
      },

      "AlmacenarRequest": {
        "type": "object",
        "required": ["id", "planetName", "climate"],
        "properties": {
          "id": { "type": "string", "description": "Identificador único" },
          "planetName": {
            "type": "string",
            "description": "Nombre del planeta"
          },
          "climate": { "type": "string", "description": "Clima del planeta" },
          "population": {
            "type": "string",
            "description": "Población del planeta (opcional)"
          }
        }
      },

      "AlmacenarResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Planeta almacenado correctamente"
          },
          "item": {
            "allOf": [
              { "$ref": "#/components/schemas/AlmacenarRequest" },
              {
                "type": "object",
                "properties": {
                  "weather": { "$ref": "#/components/schemas/Weather" }
                }
              }
            ],
            "description": "Planeta almacenado (incluye weather generado)."
          },
          "timestamp": {
            "type": "integer",
            "description": "Marca de tiempo de almacenamiento"
          }
        }
      },

      "BadRequestError": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "Parámetros inválidos" }
        }
      },

      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "No autorizado — header Authorization faltante o inválido"
          }
        }
      },

      "NotFoundError": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "Planeta no encontrado" }
        }
      },

      "InternalServerError": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "Error interno del servidor" }
        }
      }
    }
  }
}
